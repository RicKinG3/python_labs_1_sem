# -*- coding: utf-8 -*-
# –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞–ª–∞
# –¥–≤—É–º—è —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ 1 - –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ / 2 - 3/8
#
# –í—ã–ø–æ–ª–Ω–∏–ª –í–æ–ª—å–Ω—è–≥–∞ –ú–∞–∫—Å–∏–º –ò–£7-16–ë
#
from check import *

N1 = checker(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è N1: '))
N2 = checker(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è N2: '))
N1 = int(N1)
N2 = int(N2)
while N1 == 0:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è N1 –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    N1 = checker(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è N1: '))
while N2 == 0:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è N2 –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    N2 = checker(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è –¥–ª—è —á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è N2: '))
N1 = int(N1)
N2 = int(N2)
start = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
while check_num_float(start) == 0:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    start = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
start = float(start)
stop = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞: ')
while check_num_float(stop) == 0:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ü–∞ –æ—Ç—Ä–µ–∑–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    stop = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
stop = float(stop)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –æ—Ç—Ä–µ–∑–∫–æ–≤
if start == stop:
    print('–í—ã –≤–≤–µ–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–∞–Ω—á–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞, –≤–≤–µ–¥–∏—Ç–µ –∏—Ö –∑–∞–Ω–æ–≤–æ')
    start = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
    while check_num_float(start) == 0:
        print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
        start = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
    start = float(start)
    stop = input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—Ü –æ—Ç—Ä–µ–∑–∫–∞: ')
    while check_num_float(stop) == 0:
        print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ü–∞ –æ—Ç—Ä–µ–∑–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
        stop = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞: ')
    stop = float(stop)
if start > stop:
    start, stop = stop, start


# –§—É–Ω–∫—Ü–∏—è
def func(x):
    y = x * x
    return y


# –ü–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è –∑–∞–¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
def antiderivative_func(x):
    y = x ** 3 / 3
    return y


# –ú–µ—Ç–æ–¥ –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤
def right_rectangle(n):
    h = (stop - start) / n  # –®–∞–≥
    summ = 0  # –°—É–º–º–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
    xstart = start + h
    for i in range(n):
        summ += func(xstart + i * h)
    return summ * h


# —Ñ—É–Ω–∫—Ü–∏—è –º–µ—Ç–æ–¥–∞ 3/8
def three_eighths(n, start, stop):
    k = 0
    if n % 3 == 0:
        summ = 0  # –°—É–º–º–∞ –∏–Ω–≥–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è  –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
        t = 0  # –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç i
        h = (stop - start) / n  # –®–∞–≥
        for i in range(n + 1):
            # –ù–∞—Ö–æ–¥–∏–º –∫–æ—ç—Ñ
            if i == 0 or i == n:
                t = 1
            elif i % 3 == 0:
                t = 2
            else:
                t = 3
            summ += (3 / 8) * h * (t * func(start + i * h))  # –°—É–º–∏—Ä—É–µ–º –ø–æ —Ñ–æ—Ä–º—É–ª–µ
        return summ
    else:
        return '-'


Ipr = right_rectangle(N1)
Ipr1 = right_rectangle(N2)
I3_81 = three_eighths(N1, start, stop)
I3_82 = three_eighths(N2, start, stop)

# –¢–∞–±–ª–∏—á–∫–∞
print('\n N1, N2:             |', '{}'.format(N1).center(20), '|', '{}'.format(N2).center(20) + '\n' + '-' * 69)
print(' –ü—Ä. –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏: |', '{:.5}'.format(Ipr).center(20), '|', '{:.5}'.format(Ipr1).center(20) + '\n' + '-' * 69)
print(' 3/8 :               |', '{:.5}'.format(I3_81).center(20), '|', '{:.5}'.format(I3_82).center(20))

# –ù–∞—Ö–æ–¥–∏–º –∞–±—Å–æ–ª—é—Ç–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è N1
print('\n –ê–±—Å–æ–ª—é—Ç–Ω–∞—è –∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è N1')
print('\n')
if three_eighths(N1, start, stop) == '-':
    print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): - ")
    absolute_38 = '-'
else:
    absolute_38 = abs(antiderivative_func(stop) - antiderivative_func(start) - three_eighths(N1, start, stop))
    print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): ", '{:.5}'.format(absolute_38))
absolut_pr = abs(antiderivative_func(stop) - antiderivative_func(start) - right_rectangle(N1))
print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ –ø—Ä.–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤): ", '{:.5}'.format(absolut_pr))
k = 0

#  –Ω–∞—Ö–æ–¥–∏–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å
if three_eighths(N1, start, stop) == '-':
    print('\n')
    print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): - ")
    otn_38 = '-'
else:
    print('\n')
    otn_38 = abs(int(round(absolute_38 / three_eighths(N1, start, stop), 2) * 100))
    print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): " + str(otn_38) + "%")
otn_pr = abs(int(round(absolut_pr / right_rectangle(N1), 2) * 100))
print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ –ø—Ä.–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤): " + str(otn_pr) + "%")

print('---------------------------------------------------------')
# –ù–∞—Ö–æ–¥–∏–º –∞–±—Å–æ–ª—é—Ç–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è N2
print('\n –ê–±—Å–æ–ª—é—Ç–Ω–∞—è –∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è N2')
print('\n')
if three_eighths(N2, start, stop) == '-':
    print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): - ")
    absolute_382 = '-'
else:
    absolute_382 = abs(antiderivative_func(stop) - antiderivative_func(start) - three_eighths(N2, start, stop))

    print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): ", '{:.5}'.format(absolute_382))
absolut_pr2 = abs(antiderivative_func(stop) - antiderivative_func(start) - right_rectangle(N2))
print("–ê–±—Å–æ–ª—é—Ç–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ –ø—Ä.–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤): ", '{:.5}'.format(absolut_pr2))

# –Ω–∞—Ö–æ–¥–∏–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å N2
if three_eighths(N2, start, stop) == '-':
    print('\n')
    print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): - ")
    otn_382 = '-'
else:
    print('\n')
    otn_382 = abs(int(round(absolute_382 / three_eighths(N2, start, stop), 2) * 100))
    print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ 3/8): " + str(otn_382) + "%")
otn_pr2 = abs(int(round(absolut_pr2 / right_rectangle(N2), 2) * 100))
print("–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å (–º–µ—Ç–æ–¥ –ø—Ä.–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤): " + str(otn_pr2) + "%")

# –¥–ª—è –º–µ–Ω–µ–µ —Ç–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ –≤—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∫–æ–≤ —Ä–∞–∑–±–∏–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª
# –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω —Å –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é: |ùêº(ùëÅ) ‚àí ùêº(2ùëÅ) | < Œµ

x = 0
if (three_eighths(N1, start, stop) == '-') and (three_eighths(N2, start, stop) == '-'):
    print('\n–ú–µ—Ç–æ–¥ 3/8 –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω,  –ø–æ —ç—Ç–æ–º—É –≤—ã—á–∏—Å–ª—è–µ–º –∏–Ω—Ç–µ–≥—Ä–∞–ª–ª –º–µ—Ç–æ–¥–æ–º –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Å –∑–∞–¥–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é')
    x = 1
elif (three_eighths(N1, start, stop) == '-'):
    if otn_pr2 == otn_382:
        print('\n–í—Å–µ –º–µ—Ç–æ–¥—ã —Ç–æ—á–Ω—ã.')
    elif otn_382 < otn_pr2:
        x = 1
    elif otn_382 < otn_pr2:
        x = 2
elif three_eighths(N2, start, stop) == '-':
    if otn_38 == otn_pr:
        print('\n–í—Å–µ –º–µ—Ç–æ–¥—ã —Ç–æ—á–Ω—ã.')
    elif otn_38 < otn_pr:
        x = 1
    elif otn_38 > otn_pr:
        x = 2
elif (otn_38 == otn_pr) or (otn_pr2 == otn_382):
    print('\n–í—Å–µ –º–µ—Ç–æ–¥—ã —Ç–æ—á–Ω—ã.')
elif otn_38 < otn_pr:
    x = 1
elif otn_38 > otn_pr:
    x = 2
if x == 1:
    print('\n–ù–µ —Ç–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ - –ø—Ä–∞–≤—ã—Ö –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤')
elif x == 2:
    print('\n–ù–µ —Ç–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ - 3/8')
else:
    exit('–í—Å–µ –º–µ—Ç–æ–¥—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Ä–∞–±–æ—Ç—É')

eps = input('\n–í–≤–µ–¥–∏—Ç–µ eps:  ')
while check_num_float(eps) == 0:
    print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è eps, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ')
    eps = input('\n–í–≤–µ–¥–∏—Ç–µ eps: ')
eps = float(eps)
N = 4
if x == 2:
    I1 = three_eighths(2, start, stop)
    I2 = three_eighths(4, start, stop)
    while abs(I1 - I2) > eps:
        N *= 2
        I1 = I2
        I2 = three_eighths(N, start, stop)
    print('–¢–æ—á–Ω–æ—Å—Ç—å eps –ø—Ä–∏', N)
    print('–ò–Ω—Ç–µ–≥—Ä–∞–ª = {:.3g}'.format(I2))

elif x == 1:
    I1 = right_rectangle(2)
    I2 = right_rectangle(4)
    while abs(I1 - I2) > eps:
        N *= 2
        I1 = I2
        I2 = right_rectangle(N)
    print('–¢–æ—á–Ω–æ—Å—Ç—å eps –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –ø—Ä–∏', N)
    print('–ò–Ω—Ç–µ–≥—Ä–∞–ª = {:.3g}'.format(I2))
